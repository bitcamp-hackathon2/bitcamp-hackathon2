/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

tasks.withType(JavaCompile) {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8' 

    // 소스 파일을 작성할 때 사용할 자바 버전
    sourceCompatibility = '17'

    // 자바 클래스를 실행시킬 JVM의 최소 버전
    targetCompatibility = '17'
}

eclipse {
    project {
        name = "app"
    }
    jdt {  
      sourceCompatibility = 17
      targetCompatibility = 17
      javaRuntimeName = "JavaSE-17"
    }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
   implementation 'org.springframework.boot:spring-boot-starter-web'

    // 개발하는 동안 사용하는 라이브러리
    // 배포 파일을 만들 때 제외된다.
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // 스프링부트 관련 애노테이션 처리 라이브러리
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // 단위테스트 할 때 사용하는 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13.2'
    
    // 일반 용도의 유틸리티 라이브러리
    implementation 'com.google.guava:guava:31.1-jre'

}

application {
    // Define the main class for the application.
    mainClass = 'hackathon2.backend.App'
}
